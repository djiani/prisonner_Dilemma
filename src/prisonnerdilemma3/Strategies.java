/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package prisonnerdilemma3;

/**
 *
 * @author djiani
 */
public class Strategies extends javax.swing.JFrame {

    /**
     * Creates new form Strategies
     */
    public Strategies(int n) {
        initComponents();
        String s="Offensive - a program using the Offensive strategy simply defects on every round of "
                + "every game.\n\n "
                + "Softy- a program using the Softy strategy cooperates on every round of every game.\n\n"+ 
"Spastic- this program cooperates or defects on a random basis.\n\n"+ 
"Democratic- this program cooperates on the first round. On all subsequent rounds,"+ 
"Democratic examines the history of the other player's actions, counting the total number of defections and "
        + "cooperations by the other player. If the other player's defections outnumber her cooperations,"+ 
"Democratic will defect; otherwise this strategy will cooperate.\n\n"+ 
"Eye-for-Eye- this program cooperates on the first round, and then on every subsequent round "
        + "it mimics the other player's previous move. Thus, if the other player cooperates "+
"(defects) on the nth round, then Eye-for-Eye will cooperate (defect) on the (n+1)st round.\n\n"
                + "Higher-order-spastic takes a list of strategies as input. It returns a new strategy that loops through this list "
                + "of strategies, using the next one in the list for each play, and then starting again at the beginning of the "
                + "list when it has used all the strategies.\n\n"
                + "Eye-for-two-eyes The strategy should always cooperate unless the opponent defected on both of the previous two rounds\n\n";

        
        String readme="The interface is divided into tree parts:the game; the simulation and the statistic\n"
                + " ---The game \n it consist of three players with at lease one humains being and 0-2 machine. possible combinaison are:HHH, HHM, HMH,HMM"
                + " where H means Humain Being and M means Machine or Computer. There is no limit about the number of round you can play. You can decide to view the graph distibution by cliquing on GRAPH BUTTON, you can also decide "
                + " to restart the game. "
                + "\n --- the simulation:\n To run the Simulator, you must select the time rate, the number of round, a strategies for each player"
                + " When the simulator is running you can decide to stop it by using the button STOP. you can also decide to view the graph distribution by cliquing to GRAPH"
                + "\n ---The statistic\n"
                + " This part is used to view the history of the game.also, the number of time each player had cooperate or defect ";
        
         String autor="Group Project Fall 2014 CS 575\n Autor: Samuel DJIANI & Bright KPE\n Cordinated by Dr William YEOH";
         
         String payOff="(Player 1, Player 2, Player 3) = (#, #, # )\n"+
                        "(C, C, C) = (6, 6, 6)\n"+
                        "(C, NC, C) = (3, 10, 3)\n"+
                        "(C, C, NC) = (3, 3, 10 )\n"+
                        "(C, NC, NC) = (0, 6, 6 )\n"+
                        "(NC, C, C) = (10, 3, 3 )\n"+
                        "(NC, NC, C) = (6, 6, 0 )\n"+
                        "(NC, C, NC) = (6, 0, 6)\n"+	
                        "(NC, NC, NC) = (1, 1, 1)\n";
                         
         
         
        switch(n){
            case 1: text.setText(s);
                    label.setText("STRATEGIES DESCRIPTION");
                break;
            case 2: text.setText(readme);
                    label.setText("READ ME");
                break;
            case 3: text.setText(autor);
                    label.setText("AUTOR INFO");
                break;
            case 4:text.setText(payOff);
                    label.setText("Payoff description");
                    break;
            default : text.setText("error occur when trying to display the content");   
                
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextPane();
        label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        text.setEditable(false);
        text.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jScrollPane1.setViewportView(text);

        label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("STRATEGIES DESCRIPTION");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JTextPane text;
    // End of variables declaration//GEN-END:variables
}
